package BaiTH3task2;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

public class Order {
	private OrderItem[] items;
	List<Product> productList = new ArrayList<>();
	
	
	
	public void setItems(OrderItem[] items) {
		this.items = items;
	}
	
	public double cost() {
		double tatalCost = 0.0;
		for (OrderItem item : items) {
			tatalCost += item.getQuantity()*item.getP().getPrice();
			
		}
		return tatalCost;
	}
	public boolean contains (Product  o) {
		int high = items.length;
		int low = 0 ;
		while (low < high) {
			int mid = (high+low )/2;
			int compareresult = o.getId().compareTo(items[mid].getP().getId());
			if (compareresult==0) {
				return true ;
				
			}else if(compareresult<0) {
				high=mid-1;
			}else {
				low = mid+1;
			}
			
					
		}
		
		return false;
	}
	public void sortById() {
	    Arrays.sort(items, (item1, item2) -> item1.getP().getId().compareTo(item2.getP().getId()));
	}
	public Product[] filter(String type) {
		List<Product> list = new ArrayList<>();
		
		for (Product product : productList) {
			if (product.getType().equals(type)) {
				list.add(product);
			}
		}
		
		
		
		return list.toArray(new Product[0]);
		}


}
